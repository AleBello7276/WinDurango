#include "pch.h"
#include "Windows.Xbox.Controls.NuiControl.NuiControl.h"
#include "Windows.Xbox.Controls.NuiControl.NuiControl.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.


namespace winrt::Windows::Xbox::Controls::NuiControl::implementation
{
    void NuiControl::Init(int32_t left, int32_t top, int32_t right, int32_t bottom, uint32_t consoleUserId, uint64_t defaultControllerId, winrt::Windows::Xbox::Controls::NuiControl::RenderMode const& renderMode, winrt::Windows::Xbox::Controls::NuiControl::RenderTarget const& renderTarget)
    {
        throw hresult_not_implemented();
    }
    void NuiControl::RenderNui()
    {
        throw hresult_not_implemented();
    }
    void NuiControl::Show()
    {
        throw hresult_not_implemented();
    }
    void NuiControl::Hide()
    {
        throw hresult_not_implemented();
    }
    void NuiControl::SetRenderState(winrt::Windows::Xbox::Controls::NuiControl::BioRenderState const& state)
    {
        throw hresult_not_implemented();
    }
    void NuiControl::SetFeedType(winrt::Windows::Xbox::Controls::NuiControl::FeedType const& feedType)
    {
        throw hresult_not_implemented();
    }
    void NuiControl::Unload()
    {
        throw hresult_not_implemented();
    }
    void NuiControl::StartStreaming()
    {
        throw hresult_not_implemented();
    }
    void NuiControl::StopStreaming()
    {
        throw hresult_not_implemented();
    }
    uint64_t NuiControl::D3dDevice()
    {
        throw hresult_not_implemented();
    }
    uint64_t NuiControl::D3dDeviceContext()
    {
        throw hresult_not_implemented();
    }
    int32_t NuiControl::DeviceStatus()
    {
        throw hresult_not_implemented();
    }
    hstring NuiControl::TitleText()
    {
        throw hresult_not_implemented();
    }
    bool NuiControl::IsWindowVisible()
    {
        throw hresult_not_implemented();
    }
    uint64_t NuiControl::SwapChain()
    {
        throw hresult_not_implemented();
    }
    bool NuiControl::IsSensorOccluded()
    {
        throw hresult_not_implemented();
    }
    bool NuiControl::IsFloorValid()
    {
        throw hresult_not_implemented();
    }
    bool NuiControl::DoesSensorNeedTilting(float& curAngleOut, float& idealAngleOut, float& heightOut, float& oldHeight, bool& valid)
    {
        throw hresult_not_implemented();
    }
    void NuiControl::SetGuestUserDisplayName(hstring const& displayName)
    {
        throw hresult_not_implemented();
    }
    void NuiControl::SelectBody(uint32_t bodyIndex, winrt::Windows::Xbox::Controls::NuiControl::ReasonToSwitch const& reasonToSwitch)
    {
        throw hresult_not_implemented();
    }
    void NuiControl::SelectNextUser()
    {
        throw hresult_not_implemented();
    }
    void NuiControl::Enroll(uint32_t consoleUserId)
    {
        throw hresult_not_implemented();
    }
    void NuiControl::Cancel()
    {
        throw hresult_not_implemented();
    }
    uint32_t NuiControl::EnrollmentErrorsForSelectedUser()
    {
        throw hresult_not_implemented();
    }
    winrt::event_token NuiControl::BioUIChangedEvent(winrt::Windows::Xbox::Controls::NuiControl::BioUIChangedHandler const& changeHandler)
    {
        throw hresult_not_implemented();
    }
    void NuiControl::BioUIChangedEvent(winrt::event_token const& cookie) noexcept
    {
        throw hresult_not_implemented();
    }
}
