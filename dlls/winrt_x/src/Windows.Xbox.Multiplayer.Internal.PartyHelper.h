#pragma once
#include "Windows.Xbox.Multiplayer.Internal.PartyHelper.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.


namespace winrt::Windows::Xbox::Multiplayer::Internal::implementation
{
    struct PartyHelper
    {
        PartyHelper() = default;

        static winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Xbox::Multiplayer::Internal::PartyView> GetPartyViewAsync();
        static winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Xbox::Multiplayer::Internal::PartyView> GetRemotePartyViewAsync(winrt::Windows::Xbox::System::IUser actingUser, hstring lookupXboxUserId);
        static winrt::Windows::Foundation::IAsyncAction AcceptInviteToPartyAsync(winrt::Windows::Xbox::System::IUser actingUser, hstring sessionName);
        static winrt::Windows::Foundation::IAsyncAction InviteToPartyOnBehalfOfTitleAsync(winrt::Windows::Xbox::System::IUser actingUser, winrt::Windows::Foundation::Collections::IVectorView<hstring> usersToInvite, hstring titleAumid);
        static winrt::Windows::Foundation::IAsyncAction InviteToPartyAndChatOnBehalfOfTitleAsync(winrt::Windows::Xbox::System::IUser actingUser, winrt::Windows::Foundation::Collections::IVectorView<hstring> usersToInvite, hstring titleAumid);
        static winrt::Windows::Foundation::IAsyncAction DeclineInviteToPartyAsync(winrt::Windows::Xbox::System::IUser actingUser, hstring sessionName);
        static winrt::Windows::Foundation::IAsyncAction AddLocalUsersOnBehalfOfTitleAsync(winrt::Windows::Xbox::System::IUser actingUser, winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::System::User> localUsersToAdd, hstring titleAumid);
        static winrt::Windows::Foundation::IPropertyValue GetConfigurationValue(winrt::Windows::Xbox::Multiplayer::Internal::PartyConfigType const& key, uint32_t titleId);
        static winrt::Windows::Foundation::IAsyncAction DeclineGameSessionAsync(winrt::Windows::Xbox::Multiplayer::MultiplayerSessionReference sessionReference);
        static winrt::Windows::Foundation::IAsyncAction LeavePartyAsync(winrt::Windows::Xbox::System::IUser actingUser);
        static winrt::event_token PartyCreated(winrt::Windows::Foundation::EventHandler<winrt::Windows::Xbox::Multiplayer::Internal::PartyCreatedEventArgs> const& handler);
        static void PartyCreated(winrt::event_token const& token) noexcept;
        static winrt::event_token InviteSent(winrt::Windows::Foundation::EventHandler<winrt::Windows::Xbox::Multiplayer::Internal::InviteSentEventArgs> const& handler);
        static void InviteSent(winrt::event_token const& token) noexcept;
        static winrt::event_token GameSessionReady(winrt::Windows::Foundation::EventHandler<winrt::Windows::Xbox::Multiplayer::Internal::GameSessionReadyEventArgs> const& handler);
        static void GameSessionReady(winrt::event_token const& token) noexcept;
        static winrt::event_token PartyStateChanged(winrt::Windows::Foundation::EventHandler<winrt::Windows::Xbox::Multiplayer::PartyStateChangedEventArgs> const& handler);
        static void PartyStateChanged(winrt::event_token const& token) noexcept;
        static winrt::event_token PartyRosterChanged(winrt::Windows::Foundation::EventHandler<winrt::Windows::Xbox::Multiplayer::Internal::PartyRosterChangedEventArgs> const& handler);
        static void PartyRosterChanged(winrt::event_token const& token) noexcept;
        static winrt::event_token MatchStatusChanged(winrt::Windows::Foundation::EventHandler<winrt::Windows::Xbox::Multiplayer::Internal::MatchStatusChangedEventArgs> const& handler);
        static void MatchStatusChanged(winrt::event_token const& token) noexcept;
        static winrt::event_token GameInviteSent(winrt::Windows::Foundation::EventHandler<winrt::Windows::Xbox::Multiplayer::Internal::GameInviteSentEventArgs> const& handler);
        static void GameInviteSent(winrt::event_token const& token) noexcept;
        static winrt::Windows::Foundation::IAsyncAction DeclineInviteHandleAsync(winrt::Windows::Xbox::System::IUser actingUser, hstring handleId);
        static winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Xbox::Multiplayer::Internal::PartyView> GetPartyViewAsync(winrt::Windows::Xbox::System::IUser actingUser);
        static winrt::Windows::Foundation::IAsyncAction InviteToPartyOnBehalfOfTitleAsync(winrt::Windows::Xbox::System::IUser actingUser, winrt::Windows::Foundation::Collections::IVectorView<hstring> usersToInvite, hstring titleAumid, winrt::Windows::Xbox::Multiplayer::MultiplayerSessionReference sessionReferenceToInviteTo, hstring titleInviteTextId, hstring titleContext);
        static winrt::Windows::Foundation::IAsyncAction InviteToPartyAndChatOnBehalfOfTitleAsync(winrt::Windows::Xbox::System::IUser actingUser, winrt::Windows::Foundation::Collections::IVectorView<hstring> usersToInvite, hstring titleAumid, winrt::Windows::Xbox::Multiplayer::MultiplayerSessionReference sessionReferenceToInviteTo, hstring titleInviteTextId, hstring titleContext);
        static winrt::Windows::Foundation::IAsyncAction AcceptInviteHandleToPartyAsync(winrt::Windows::Xbox::System::IUser actingUser, hstring handleId);
        static winrt::Windows::Foundation::IAsyncAction AcceptInviteHandleToPartyAsync(winrt::Windows::System::User actingUser, hstring handleId);
        static winrt::Windows::Foundation::IAsyncAction AcceptInviteToPartyAsync(winrt::Windows::System::User actingUser, hstring sessionName);
        static winrt::Windows::Foundation::IAsyncAction InviteToPartyOnBehalfOfTitleAsync(winrt::Windows::System::User actingUser, winrt::Windows::Foundation::Collections::IVectorView<hstring> usersToInvite, hstring titleAumid);
        static winrt::Windows::Foundation::IAsyncAction InviteToPartyOnBehalfOfTitleAsync(winrt::Windows::System::User actingUser, winrt::Windows::Foundation::Collections::IVectorView<hstring> usersToInvite, hstring titleAumid, winrt::Windows::Xbox::Multiplayer::MultiplayerSessionReference sessionReferenceToInviteTo, hstring titleInviteTextId, hstring titleContext);
        static void SetMockData(winrt::Windows::Xbox::Multiplayer::Internal::PartyMockData const& mock);
        static void FireGameSessionReady(uint32_t titleId, hstring const& sessionName, hstring const& serviceConfigurationId, hstring const& sessionTemplateName);
        static uint32_t GetPartyDocumentCount();
        static uint32_t GetPartyDocumentSubscriptionCount();
        static uint32_t GetPartyEventListenersCount();
        static void SimulateLowPowerNotification(int32_t leavingLowPower);
        static winrt::Windows::Foundation::IAsyncAction AddLocalUsersForTitleIdAsync(uint32_t titleId, winrt::Windows::Xbox::System::IUser actingUser, winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::System::User> localUsersToAdd);
        static winrt::Windows::Foundation::IAsyncAction RemoveLocalUsersForTitleIdAsync(uint32_t titleId, winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::System::User> localUsersToRemove);
        static hstring GetPartyIdForTitleId(uint32_t titleId);
        static winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Xbox::Multiplayer::Internal::PartyView> GetPartyViewForTitleIdAsync(uint32_t titleId);
        static winrt::Windows::Foundation::IAsyncAction InviteToPartyForTitleIdAsync(uint32_t titleId, winrt::Windows::Xbox::System::IUser actingUser, winrt::Windows::Foundation::Collections::IVectorView<hstring> usersToInvite);
    };
}
namespace winrt::Windows::Xbox::Multiplayer::Internal::factory_implementation
{
    struct PartyHelper : PartyHelperT<PartyHelper, implementation::PartyHelper>
    {
    };
}
