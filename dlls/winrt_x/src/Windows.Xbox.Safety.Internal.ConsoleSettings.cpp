#include "pch.h"
#include "Windows.Xbox.Safety.Internal.ConsoleSettings.h"
#include "Windows.Xbox.Safety.Internal.ConsoleSettings.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.


namespace winrt::Windows::Xbox::Safety::Internal::implementation
{
    void ConsoleSettings::Enabled(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::Enabled()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::MaturityLevel(uint32_t value)
    {
        throw hresult_not_implemented();
    }
    uint32_t ConsoleSettings::MaturityLevel()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::CanBrowseContentAboveMaturityLevel(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::CanBrowseContentAboveMaturityLevel()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowNewProfiles(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowNewProfiles()
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::IsPassKeySet()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::ClearPassKey()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::ObscureAdultTVListings(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::ObscureAdultTVListings()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowGuestUsers(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowGuestUsers()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowFactoryReset(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowFactoryReset()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowDeleteProfiles(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowDeleteProfiles()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowChangeRegion(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowChangeRegion()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::DeleteProfilesOnSignOut(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::DeleteProfilesOnSignOut()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowBrowser(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowBrowser()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowInstallApps(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowInstallApps()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowUninstallApps(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowUninstallApps()
    {
        throw hresult_not_implemented();
    }
    void ConsoleSettings::AllowSetHomeConsole(bool value)
    {
        throw hresult_not_implemented();
    }
    bool ConsoleSettings::AllowSetHomeConsole()
    {
        throw hresult_not_implemented();
    }
}
