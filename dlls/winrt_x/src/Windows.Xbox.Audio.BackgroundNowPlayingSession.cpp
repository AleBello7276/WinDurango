#include "pch.h"
#include "Windows.Xbox.Audio.BackgroundNowPlayingSession.h"
#include "Windows.Xbox.Audio.BackgroundNowPlayingSession.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.


namespace winrt::Windows::Xbox::Audio::implementation
{
    void BackgroundNowPlayingSession::NotifyPlaybackInfoChanged(winrt::Windows::Foundation::IInspectable const& dataSource)
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::NotifyMediaInfoChanged(winrt::Windows::Foundation::IInspectable const& dataSource)
    {
        throw hresult_not_implemented();
    }
    winrt::event_token BackgroundNowPlayingSession::SessionChanged(winrt::Windows::Xbox::Audio::SessionChangedEventHandler const& handler)
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::SessionChanged(winrt::event_token const& token) noexcept
    {
        throw hresult_not_implemented();
    }
    winrt::event_token BackgroundNowPlayingSession::MediaChanged(winrt::Windows::Xbox::Audio::MediaChangedEventHandler const& handler)
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::MediaChanged(winrt::event_token const& token) noexcept
    {
        throw hresult_not_implemented();
    }
    winrt::event_token BackgroundNowPlayingSession::PlaybackStateChanged(winrt::Windows::Xbox::Audio::PlaybackStateChangedEventHandler const& handler)
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::PlaybackStateChanged(winrt::event_token const& token) noexcept
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Xbox::Audio::BackgroundNowPlayingSessionType BackgroundNowPlayingSession::CurrentSessionType()
    {
        throw hresult_not_implemented();
    }
    hstring BackgroundNowPlayingSession::Title()
    {
        throw hresult_not_implemented();
    }
    hstring BackgroundNowPlayingSession::Subtitle()
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Storage::Streams::IRandomAccessStream BackgroundNowPlayingSession::ThumbnailStream()
    {
        throw hresult_not_implemented();
    }
    hstring BackgroundNowPlayingSession::Aumid()
    {
        throw hresult_not_implemented();
    }
    hstring BackgroundNowPlayingSession::PrimaryPackageAumid()
    {
        throw hresult_not_implemented();
    }
    bool BackgroundNowPlayingSession::IsPlaying()
    {
        throw hresult_not_implemented();
    }
    bool BackgroundNowPlayingSession::IsShuffled()
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Xbox::Audio::BackgroundNowPlayingSessionRepeatMode BackgroundNowPlayingSession::RepeatMode()
    {
        throw hresult_not_implemented();
    }
    bool BackgroundNowPlayingSession::CanPlay()
    {
        throw hresult_not_implemented();
    }
    bool BackgroundNowPlayingSession::CanPause()
    {
        throw hresult_not_implemented();
    }
    bool BackgroundNowPlayingSession::CanSkipNext()
    {
        throw hresult_not_implemented();
    }
    bool BackgroundNowPlayingSession::CanSkipPrevious()
    {
        throw hresult_not_implemented();
    }
    bool BackgroundNowPlayingSession::CanToggleRepeat()
    {
        throw hresult_not_implemented();
    }
    bool BackgroundNowPlayingSession::CanToggleShuffle()
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::Play()
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::Pause()
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::SkipNext()
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::SkipPrevious()
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::ToggleRepeat()
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::ToggleShuffle()
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::Suspend()
    {
        throw hresult_not_implemented();
    }
    void BackgroundNowPlayingSession::Resume()
    {
        throw hresult_not_implemented();
    }
}
