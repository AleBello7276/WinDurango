#include "pch.h"
#include "Windows.Xbox.Input.GamepadReading.h"
#include "Windows.Xbox.Input.GamepadReading.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.


namespace winrt::Windows::Xbox::Input::implementation
{
    winrt::Windows::Foundation::DateTime GamepadReading::Timestamp()
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Xbox::Input::GamepadButtons GamepadReading::Buttons()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsDPadUpPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsDPadDownPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsDPadLeftPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsDPadRightPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsMenuPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsViewPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsLeftThumbstickPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsRightThumbstickPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsLeftShoulderPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsRightShoulderPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsAPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsBPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsXPressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsYPressed()
    {
        throw hresult_not_implemented();
    }
    float GamepadReading::LeftTrigger()
    {
        throw hresult_not_implemented();
    }
    float GamepadReading::RightTrigger()
    {
        throw hresult_not_implemented();
    }
    float GamepadReading::LeftThumbstickX()
    {
        throw hresult_not_implemented();
    }
    float GamepadReading::LeftThumbstickY()
    {
        throw hresult_not_implemented();
    }
    float GamepadReading::RightThumbstickX()
    {
        throw hresult_not_implemented();
    }
    float GamepadReading::RightThumbstickY()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsPaddle1Pressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsPaddle2Pressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsPaddle3Pressed()
    {
        throw hresult_not_implemented();
    }
    bool GamepadReading::IsPaddle4Pressed()
    {
        throw hresult_not_implemented();
    }
}
