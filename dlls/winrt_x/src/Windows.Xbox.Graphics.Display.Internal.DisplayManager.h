#pragma once
#include "Windows.Xbox.Graphics.Display.Internal.DisplayManager.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.


namespace winrt::Windows::Xbox::Graphics::Display::Internal::implementation
{
    struct DisplayManager
    {
        DisplayManager() = default;

        static bool IsHdrGamingSupported();
        static winrt::Windows::Xbox::Graphics::Display::Internal::DisplayValue GetOption(winrt::Windows::Xbox::Graphics::Display::Internal::DisplayOption const& option);
        static void SetOption(winrt::Windows::Xbox::Graphics::Display::Internal::DisplayOption const& option, winrt::Windows::Xbox::Graphics::Display::Internal::DisplayValue const& value);
        static winrt::Windows::Xbox::Graphics::Display::Internal::DisplayCapabilities Capabilities();
        static winrt::Windows::Xbox::Graphics::Display::Internal::DisplayModeInternal DefaultDisplayMode();
        static void DefaultDisplayMode(winrt::Windows::Xbox::Graphics::Display::Internal::DisplayModeInternal const& value);
        static void SetTempDisplayMode(winrt::Windows::Xbox::Graphics::Display::Internal::DisplayModeInternal const& value);
        static void ClearTempDisplayMode();
        static winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::Graphics::Display::Internal::DisplayModeInternal> SupportedDisplayModes();
        static winrt::Windows::Foundation::Collections::IVectorView<hstring> GetStateDump();
        static winrt::Windows::Xbox::Graphics::Display::Internal::DisplayState GetCurrentDisplayState();
        static winrt::Windows::Xbox::Graphics::Display::Internal::DisplayCalibrationInfo DisplayCalibration();
        static void DisplayCalibration(winrt::Windows::Xbox::Graphics::Display::Internal::DisplayCalibrationInfo const& value);
        static bool GetEnhancementOption(winrt::Windows::Xbox::Graphics::Display::Internal::EnhancementOption const& option);
        static void SetEnhancementOption(winrt::Windows::Xbox::Graphics::Display::Internal::EnhancementOption const& option, bool value);
        static bool IsHdr10GamingSupported();
        static bool IsDvllGamingSupported();
        static void IsDvllGamingSupportedWithRefreshRate(bool& supported, winrt::Windows::Xbox::Graphics::Display::Internal::DisplayRefreshRate& refreshRate);
        static void SetColorTransform(winrt::Windows::Xbox::Graphics::Display::Internal::DisplayColorTransformInfo const& value);
    };
}
namespace winrt::Windows::Xbox::Graphics::Display::Internal::factory_implementation
{
    struct DisplayManager : DisplayManagerT<DisplayManager, implementation::DisplayManager>
    {
    };
}
