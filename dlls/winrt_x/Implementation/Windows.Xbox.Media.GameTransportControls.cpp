#include "pch.h"
#include "Windows.Xbox.Media.GameTransportControls.h"
#include "Windows.Xbox.Media.GameTransportControls.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
//static_assert(false, "This file is generated by a tool and will be overwritten. Open this error and view the comment for assistance.");

namespace winrt::Windows::Xbox::Media::implementation
{
    hstring GameTransportControls::Title()
    {
        return L"null";
    }
    hstring GameTransportControls::Subtitle()
    {
        return L"null";
    }
    winrt::Windows::Xbox::Media::GamePlaybackStatus GameTransportControls::PlaybackStatus()
    {
        return this->m_gamePlaybackStatus;
    }
    void GameTransportControls::PlaybackStatus(winrt::Windows::Xbox::Media::GamePlaybackStatus const& value)
    {
        this->m_gamePlaybackStatus = value;
    }
    winrt::Windows::Xbox::Media::SoundLevel GameTransportControls::SoundLevel()
    {
        return SoundLevel::Muted;
    }
    bool GameTransportControls::IsEnabled()
    {
        return this->m_isEnabled;
    }
    void GameTransportControls::IsEnabled(bool value)
    {
        this->m_isEnabled = value;
    }
    bool GameTransportControls::IsPlayEnabled()
    {
        return this->m_isPlayEnabled;
    }
    void GameTransportControls::IsPlayEnabled(bool value)
    {
        this->m_isPlayEnabled = value;
    }
    bool GameTransportControls::IsPauseEnabled()
    {
        return this->m_isPauseEnabled;
    }
    void GameTransportControls::IsPauseEnabled(bool value)
    {
        this->m_isPauseEnabled = value;
    }
    bool GameTransportControls::IsMenuEnabled()
    {
        return this->m_isMenuEnabled;
    }
    void GameTransportControls::IsMenuEnabled(bool value)
    {
        this->m_isMenuEnabled = value;
    }
    bool GameTransportControls::IsViewEnabled()
    {
        return this->m_isViewEnabled;
    }
    void GameTransportControls::IsViewEnabled(bool value)
    {
        this->m_isViewEnabled = value;
    }
    bool GameTransportControls::IsBackEnabled()
    {
        return this->m_isBackEnabled;
    }
    void GameTransportControls::IsBackEnabled(bool value)
    {
        this->m_isBackEnabled = value;
    }
    winrt::event_token GameTransportControls::ButtonPressed(winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Xbox::Media::GameTransportControls, winrt::Windows::Xbox::Media::GameTransportControlsButtonPressedEventArgs> const& handler)
    {
        return this->m_gameTransportControlsButtonPressedEventArgs.add(handler);
    }
    void GameTransportControls::ButtonPressed(winrt::event_token const& token) noexcept
    {
        this->m_gameTransportControlsButtonPressedEventArgs.remove(token);
    }
    winrt::event_token GameTransportControls::PropertyChanged(winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Xbox::Media::GameTransportControls, winrt::Windows::Xbox::Media::GameTransportControlsPropertyChangedEventArgs> const& handler)
    {
        return this->m_gameTransportControlsPropertyChangedEventArgs.add(handler);
    }
    void GameTransportControls::PropertyChanged(winrt::event_token const& token) noexcept
    {
        this->m_gameTransportControlsPropertyChangedEventArgs.remove(token);
    }
}
